{#- Template for Go modules.

This template renders a Go package.

Context:
  data dict: The package to render.
  root (bool): Whether this is the root object, injected with `:::` in a Markdown page.
  heading_level (int): The HTML heading level to use.
  config (dict): The configuration options.
-#}

{% block logs scoped %}
  {#- Logging block.

  This block can be used to log debug messages, deprecation messages, warnings, etc.
  -#}
  {{ log.debug("Rendering " + data.importPath) }}
{% endblock logs %}

<div class="doc doc-object doc-module">
  {% with obj = data, html_id = data.importPath %}

    {% if root %}
      {% set show_full_path = config.show_root_full_path %}
      {% set root_members = True %}
    {% elif root_members %}
      {% set show_full_path = config.show_root_members_full_path or config.show_object_full_path %}
      {% set root_members = False %}
    {% else %}
      {% set show_full_path = config.show_object_full_path %}
    {% endif %}

    {% set module_name = data.importPath + "/" + data.name if show_full_path else data.name %}

    {% if not root or config.show_root_heading %}
      {% filter heading(
          heading_level,
          role="package",
          id=html_id,
          class="doc doc-heading",
          toc_label=('<code class="doc-symbol doc-symbol-toc doc-symbol-module"></code>&nbsp;'|safe if config.show_symbol_type_toc else '') + (config.toc_label if config.toc_label and root else data.name),
        ) %}

        {% block heading scoped %}
          {#- Heading block.

          This block renders the heading for the package.
          -#}
          {% if config.heading and root %}
            {{ config.heading }}
          {% elif config.separate_signature %}
            <span class="doc doc-object-name doc-module-name">{{ module_name }}</span>
          {% else %}
            <code>{{ module_name }}</code>
          {% endif %}
        {% endblock heading %}

        {# here would be labels if we had them #}

      {% endfilter %}

    {% else %}
      {% if config.show_root_toc_entry %}
        {% filter heading(heading_level,
            role="package",
            id=html_id,
            toc_label=('<code class="doc-symbol doc-symbol-toc doc-symbol-module"></code>&nbsp;'|safe if config.show_symbol_type_toc else '') + (config.toc_label if config.toc_label and root else package.name),
            hidden=True,
          ) %}
        {% endfilter %}
      {% endif %}
      {% set heading_level = heading_level - 1 %}
    {% endif %}


    <div class="doc doc-contents {% if root %}first{% endif %}">
      {% block contents scoped %}
        {#- Contents block.

        This block renders the contents of the module.
        It contains other blocks that users can override.
        Overriding the contents block allows to rearrange the order of the blocks.
        -#}
        {% block docstring scoped %}
          {#- Docstring block.

          This block renders the docstring for the module.
          -#}
          {# TODO : docstring template #}
          {#
          {% with docstring_sections = module.docstring.parsed %}
            YORE: Bump 2: Replace `"|get_template` with `.html.jinja"` within line.
            {% include "docstring"|get_template with context %}
          {% endwith %}
          #}
          {{ data.doc }}
        {% endblock docstring %}

        {% block children scoped %}
          {% set root = False %}
          {% set heading_level = heading_level +1 %}

          {% for ty in obj.types %}
            {% include ty|get_template with context %}
          {% endfor %}

          {% for function in obj.funcs %}
            {% with data = function%}
              {% include function|get_template with context%}
            {% endwith %}
          {% endfor %}
        {% endblock %}
      {% endblock contents%}

    </div>
  {% endwith %}
</div>
